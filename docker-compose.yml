services:
  ##########################################################################
  # 1) Basic HTTP test-service
  ##########################################################################
  test-service:
    image: hashicorp/http-echo:latest
    command: 
      - "-text=Hello from test-service"
      - "-listen=:5678"
    expose:
      - "5678"
    deploy:
      resources:
        limits:
          cpus: "3"
          memory: 8G
    # For Traefik to route HTTPS traffic:
    labels:
      - "traefik.enable=true"
      # We'll match Host(`rev-proxy.test.lab`) for our TLS router:
      - "traefik.http.routers.test-service.rule=Host(`rev-proxy.test.lab`)"
      - "traefik.http.routers.test-service.entrypoints=web-secure"
      - "traefik.http.routers.test-service.tls=true"

  ##########################################################################
  # 2) HAProxy with SSL
  ##########################################################################
  haproxy:
    image: haproxy:latest
    profiles: ["haproxy"]
    ports:
      - "443:443"
    volumes:
      - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
      # Mount our certificate files into the container
      - "./certs:/usr/local/etc/haproxy/certs:ro"
    depends_on:
      - test-service
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 8G

  ##########################################################################
  # 3) Nginx with SSL
  ##########################################################################
  nginx:
    image: nginx:latest
    profiles: ["nginx"]
    ports:
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      # Mount our certificate files
      - "./certs:/etc/nginx/certs:ro"
    depends_on:
      - test-service
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 8G

  ##########################################################################
  # 4) Traefik with SSL
  ##########################################################################
  traefik:
    image: traefik:latest
    profiles: ["traefik"]
    command:
      # - "--api.dashboard=true"
      - "--providers.docker=true"
      # We'll define an HTTPS entrypoint called web-secure
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http.tls=true"
      # Use a file provider for our cert so that Traefik loads it
      - "--providers.file.directory=/etc/traefik/dynamic"
      # - "--providers.file.watch=true"

      # Disable or reduce overhead
      - "--log.level=ERROR"
      - "--accesslog=false"

      # Performance-related settings
      - "--serversTransport.maxIdleConnsPerHost=10000"
      # - "--serversTransport.forwardingTimeouts.dialTimeout=5s"
      # - "--serversTransport.forwardingTimeouts.idleTimeout=10m"
    ports:
      - "443:443"
    volumes:
      # For Docker dynamic discovery:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # For our dynamic config & certificate:
      - "./traefik_dynamic.yaml:/etc/traefik/dynamic/traefik_dynamic.yaml:ro"
      - "./certs:/etc/traefik/certs:ro"
    depends_on:
      - test-service
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 8G
